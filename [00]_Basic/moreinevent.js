events is js document.gitElementById(medo).onmosemove = funtion(event){} // this is one way to implement that   - clientx => this calculate the position of mouse from the page corners   - offsetx => this calculate the position of the mouse from the element coreners  - event.target => this will give you the element that has the event   - event.type   => you can know the type   when you want to know which event is happening on the element you can send the   clickHandel (this , event) inside the function that you call when the event happens  .--------------------------------capturing & bubbling phases    => when you add event to element and the parend has the same event once you click on the child element the two events will fire    to understand whats happen you should understand about two moods the envent work    - capturig phase : from the parent to child to grand child  - bubbling phase : once i fire the event then i go upper to see if the parent have event to fire or not  if you i fire them  - to do make the child is the only one that his event work you can add to the event a method called  :  =>  event.stopPropagation()   --------------------------------the usage off add event listener /* => code  <div class="three" onMouseMove="handelEvent(this , event)"></div>    <script>        handelEvent = (element, event) => {            console.log(element, "this is the event ", event)        } <script>